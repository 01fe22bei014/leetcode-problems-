
int gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

char* gcdOfStrings(char* str1, char* str2) {
    int length1 = strlen(str1);
    int length2 = strlen(str2);
    int divisor = gcd(length1, length2);
    
    // Check if the concatenation of str1 and str2 equals the concatenation of str2 and str1
    char* concat1 = malloc(sizeof(char) * (length1 + length2 + 1));
    char* concat2 = malloc(sizeof(char) * (length1 + length2 + 1));
    strcpy(concat1, str1);
    strcat(concat1, str2);
    strcpy(concat2, str2);
    strcat(concat2, str1);
    
    if (strcmp(concat1, concat2) != 0) {
        free(concat1);
        free(concat2);
        return "";
    }
    
    free(concat1);
    free(concat2);

    char* result = malloc(sizeof(char) * (divisor + 1));
    strncpy(result, str1, divisor);
    result[divisor] = '\0';

    return result;
}

