/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

struct ListNode *head = NULL;
struct ListNode *tail = NULL;

struct ListNode *create(int data) {
    struct ListNode *newNode = malloc(sizeof(struct ListNode));
    if (newNode == NULL) {
        printf("Memory allocation failed");
        return NULL;
    }
    newNode->val = data;
    newNode->next = NULL;
    return newNode;
}

void insertNode(int data) {
    struct ListNode *newNode = create(data);
    if (head == NULL && tail == NULL) {
        head = newNode;
        tail = newNode;
    } else {
        tail->next = newNode;
        tail = newNode;
    }
}

struct ListNode *addTwoNumbers(struct ListNode *l1, struct ListNode *l2) {
    int carry = 0;
    struct ListNode *result = NULL;
    struct ListNode *tail = NULL;

    while (l1 != NULL || l2 != NULL || carry != 0) {
        int sum = carry;
        if (l1 != NULL) {
            sum += l1->val;
            l1 = l1->next;
        }
        if (l2 != NULL) {
            sum += l2->val;
            l2 = l2->next;
        }
        carry = sum / 10;

        struct ListNode *newNode = create(sum % 10);
        if (result == NULL) {
            result = newNode;
            tail = newNode;
        } else {
            tail->next = newNode;
            tail = newNode;
        }
    }
    return result;
}
